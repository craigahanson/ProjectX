# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    version: '5.0.x'

- task: PowerShell@2
  displayName: 'Install Sql Server tools'
  inputs:
    targetType: 'inline'
    script: |
      Install-Module -Name SqlServer -AllowClobber -Force

- task: PowerShell@2
  displayName: 'Install AzureRM tools'
  inputs:
    targetType: 'inline'
    script: |
      Install-Module -Name AzureRM.sql -AllowClobber -Force

- script: dotnet tool install --global dotnet-ef
  displayName: 'Install Entity Framework tools'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'Build Project ($(buildConfiguration))'

- powershell: |
    .\scripts\SetAzureFirewallRule.ps1 -ServerName $env:LOCALSERVERINSTANCE -ResourceGroup $env:LOCALRESOURCEGROUP
  env:
    LOCALSERVERINSTANCE: $(DbServer)
    LOCALRESOURCEGROUP: $(ResourceGroup)
  displayName: 'Set Azure Firewall Rules'

- powershell: |
    .\scripts\Database.ps1 -Clean -DatabaseName $env:LOCALDATABASENAME -ServerInstance $env:LOCALSERVERINSTANCE -ServerUsername $env:LOCALSERVERUSERNAME -ServerPassword $env:LOCALSERVERPASSWORD -Configuration Test
  env:
    LOCALDATABASENAME: $(DbName)
    LOCALSERVERINSTANCE: $(DbServer)
    LOCALSERVERUSERNAME: $(DbUser)
    LOCALSERVERPASSWORD: $(DbPassword)
  displayName: 'Build Database'

- powershell: |
    .\scripts\RemoveAzureFirewallRule.ps1 -ServerName $env:LOCALSERVERINSTANCE -ResourceGroup $env:LOCALRESOURCEGROUP
  env:
    LOCALSERVERINSTANCE: $(DbServer)
    LOCALRESOURCEGROUP: $(ResourceGroup)
  displayName: 'Remove Azure Firewall Rules'

#- task: DotNetCoreCLI@2
#  displayName: 'dotnet test'
#  inputs:
#    command: 'test'
